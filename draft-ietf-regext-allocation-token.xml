<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced.
     An alternate method (rfc include) is described in the references. -->
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC3688 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3688.xml">
<!ENTITY RFC4648 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4648.xml">
<!ENTITY RFC5730 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5730.xml">
<!ENTITY RFC5731 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5731.xml">
<!ENTITY RFC7942 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7942.xml">
<!ENTITY RFC7451 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7451.xml">
<!ENTITY RFC8174 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY BCP14 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY I-D.narten-iana-considerations-rfc2434bis SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.narten-iana-considerations-rfc2434bis.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs),
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="yes"?>
<!-- keep one blank line between list items -->
<?rfc comments="yes" ?>
<!-- show cref output -->
<?rfc inline="yes" ?>
<!-- inline cref output -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="std" docName="draft-ietf-regext-allocation-token-09" ipr="trust200902">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN"
     they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <title abbrev="allocationToken">
    Allocation Token Extension for the Extensible Provisioning Protocol (EPP)</title>

    <author fullname="James Gould" initials="J.G" surname="Gould">
      <organization>VeriSign, Inc.</organization>

      <address>
        <postal>
          <street>12061 Bluemont Way</street>

          <city>Reston</city>

          <region>VA</region>

          <code>20190</code>

          <country>US</country>
        </postal>

        <email>jgould@verisign.com</email>

        <uri>http://www.verisigninc.com</uri>
      </address>
    </author>

 	<author fullname="Kal Feher" initials="K.F" surname="Feher">
       <organization>Neustar</organization>

       <address>
          <postal>
             <street>lvl 8/10 Queens Road</street>

             <city>Melbourne</city>

             <region>VIC</region>

             <code>3004</code>

             <country>AU</country>
          </postal>

         <email>ietf@feherfamily.org</email>

         <uri>http://www.neustar.biz</uri>
      </address>
    </author>

    <date day="31" month="July" year="2018"/>

    <abstract>
      <t>This document describes an Extensible Provisioning Protocol (EPP)
      extension for including an Allocation Token in "query" and "transform" commands.  
      The Allocation Token is used as a credential that authorizes a client to 
      request the allocation of a specific object from the server, using one 
      of the EPP transform commands including create and transfer.</t>
    </abstract>

  </front>

  <middle>
    <section title="Introduction">
      <t>This document describes an extension mapping for version 1.0 of the
      <xref target="RFC5730">Extensible Provisioning Protocol (EPP)</xref>.
      This mapping, an extension to EPP object mappings like the <xref
      target="RFC5731">EPP domain name mapping</xref>, supports passing 
      an Allocation Token as a credential 
      that authorizes a client to request the allocation of a specific object from the server, 
      using one of the EPP transform commands including create and transfer.</t>
      <t>Allocation is when a server assigns the sponsoring client of an object based on the 
      use of an Allocation Token credential.  Examples include allocating a registration based on a 
      pre-eligibility Allocation Token, allocating a premium domain name registration based on an 
      auction Allocation Token, allocating a registration based on a founders Allocation Token, 
      and allocating an existing domain name held by the server or by a different sponsoring 
      client based on an Allocation Token passed with a transfer command.</t>
      <t>A client MUST pass an Allocation Token known to the
      server to be authorized to use one of the supported EPP transform commands.
      It is up to server
      policy which EPP transform commands and which objects require the
      Allocation Token.  The Allocation Token MAY be returned to an
      authorized client for passing out-of-band to a client that
      uses it with an EPP transform command.</t>

      <section title="Conventions Used in This Document">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
      NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
      "MAY", and "OPTIONAL" in this document are to be interpreted as
      described in <eref target="https://tools.ietf.org/html/bcp14">BCP 14</eref> <xref target="RFC2119"/> <xref target="RFC8174"/> 
      when, and only when, they
      appear in all capitals, as shown here.</t>

        <t>XML is case sensitive. Unless stated otherwise, XML specifications
        and examples provided in this document MUST be interpreted in the
        character case presented in order to develop a conforming
        implementation.</t>

        <t>In examples, "C:" represents lines sent by a protocol client and "S:" represents lines returned by a protocol server.
        Indentation and white space in examples are provided only to illustrate element relationships
        and are not a REQUIRED feature of this protocol.
        </t>

        <t>The XML namespace prefix "allocationToken" is used for the namespace
   "urn:ietf:params:xml:ns:allocationToken-1.0", but implementations MUST NOT depend on
        it and instead employ
        a proper namespace-aware XML parser and serializer to interpret and
        output the XML documents.</t>
      </section>
    </section>

    <section anchor="attrs" title="Object Attributes">

      <t>This extension adds additional elements to EPP object mappings like the <xref
      target="RFC5731">EPP domain name mapping</xref>. Only those new elements
      are described here.</t>

      <section anchor="allocationToken" title="Allocation Token">

        <t>The Allocation Token is a simple XML "token" type.  The exact
        format of the Allocation Token is up to server policy.  The server
        MAY have the Allocation Token for each object to match against the
        Allocation Token passed by the client to authorize the allocation of
        the object.  The &lt;allocationToken:allocationToken&gt; element
        is used for all of the supported EPP commands as well as the
        info response.  If the Allocation Token passed to the server does not 
        apply to the object, the server MUST
        return an EPP error result code of 2201.</t>


       <figure>
            <preamble>An example &lt;allocationToken:allocationToken&gt; element
            with value of "abc123":</preamble>

            <artwork><![CDATA[
<allocationToken:allocationToken xmlns:allocationToken=
          "urn:ietf:params:xml:ns:allocationToken-1.0">
  abc123
</allocationToken:allocationToken>]]></artwork>
       </figure>

      </section>

    </section>

    <section anchor="commands" title="EPP Command Mapping">
      <t>A detailed description of the EPP syntax and semantics can be found
      in the EPP core protocol specification <xref target="RFC5730"/>.</t>

      <section anchor="queryCommands" title="EPP Query Commands">

        <t>EPP provides three commands to retrieve object information: &lt;check&gt; to determine
        if an object can be provisioned, &lt;info&gt; to retrieve  information associated
        with an object, and &lt;transfer&gt; to retrieve object transfer status information.</t>

      <section anchor="checkCommand" title="EPP &lt;check&gt; Command">

       <t>This extension defines additional elements to extend the EPP &lt;check&gt;
        command of an object mapping like <xref target="RFC5731"/>.</t>
	   <t>This extension allows clients to check the availability of an object with an Allocation Token, as described in <xref target="allocationToken"/>.
	   Clients can check if an object can be created using the Allocation Token.  The Allocation Token is applied to all object names included
	   in the EPP &lt;check&gt; command.</t>

       <figure>
            <preamble>Example &lt;check&gt; command for the allocation.example domain name using
            the &lt;allocationToken:allocationToken&gt; extension with the allocation
            token of 'abc123':</preamble>

            <artwork><![CDATA[
C:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
C:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
C:  <command>
C:    <check>
C:      <domain:check
C:       xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
C:        <domain:name>allocation.example</domain:name>
C:      </domain:check>
C:    </check>
C:    <extension>
C:      <allocationToken:allocationToken
C:        xmlns:allocationToken=
C:          "urn:ietf:params:xml:ns:allocationToken-1.0">
C:        abc123
C:      </allocationToken:allocationToken>
C:    </extension>
C:    <clTRID>ABC-12345</clTRID>
C:  </command>
C:</epp>]]></artwork>
       </figure>
          <t>If the query was successful, the server replies with a &lt;check&gt; response providing
             the availability status of the queried object based on the following Allocation Token cases, where the object is otherwise available:</t>
          <t><list style="numbers">
            <t>If an object requires an Allocation Token and the Allocation Token does apply to the object, 
            then the server MUST return the availability status as available (e.g., "avail" attribute is "1" or "true").</t>
            <t>If an object requires an Allocation Token and the Allocation Token does not apply to the object or an object does not require an Allocation Token, 
            then the server SHOULD return the availability status as unavailable (e.g., "avail" attribute is "0" or "false").</t>
          </list></t>
             
          <figure>
            <preamble>Example &lt;check&gt; domain response for a &lt;check&gt; command
            using the &lt;allocationToken:allocationToken&gt; extension:</preamble>

            <artwork>
<![CDATA[
S:<?xml version="1.0" encoding="UTF-8"?>
S:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
S: <response>
S:  <result code="1000">
S:   <msg lang="en-US">Command completed successfully</msg>
S:  </result>
S:  <resData>
S:   <domain:chkData
S:     xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
S:    <domain:cd>
S:     <domain:name avail="0">allocation.example</domain:name>
S:     <domain:reason>Allocation Token mismatch</domain:reason>
S:    </domain:cd>
S:   </domain:chkData>
S:  </resData>
S:  <trID>
S:   <clTRID>ABC-DEF-12345</clTRID>
S:   <svTRID>54321-XYZ</svTRID>
S:  </trID>
S: </response>
S:</epp>]]></artwork>
          </figure>


       <figure>
            <preamble>Example &lt;check&gt; command with the &lt;allocationToken:allocationToken&gt;
            extension for the allocation.example and allocation2.example domain names.  Availability of
			allocation.example and allocation2.example domain names are based on the Allocation Token 'abc123':</preamble>

            <artwork>
<![CDATA[
C:<?xml version="1.0" encoding="UTF-8"?>
C:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
C: <command>
C:  <check>
C:   <domain:check
C:     xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
C:    <domain:name>allocation.example</domain:name>
C:    <domain:name>allocation2.example</domain:name>
C:   </domain:check>
C:  </check>
C:  <extension>
C:   <allocationToken:allocationToken
C:     xmlns:allocationToken=
C:       "urn:ietf:params:xml:ns:allocationToken-1.0">
C:     abc123
C:   </allocationToken:allocationToken>
C:  </extension>
C:  <clTRID>ABC-DEF-12345</clTRID>
C: </command>
C:</epp>]]></artwork>
       </figure>

          <figure>
            <preamble>Example &lt;check&gt; domain response for multiple domain names in
            the &lt;check&gt; command using the &lt;allocationToken:allocationToken&gt;
            extension:</preamble>

            <artwork>
<![CDATA[
S:<?xml version="1.0" encoding="UTF-8"?>
S:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
S: <response>
S:  <result code="1000">
S:   <msg lang="en-US">Command completed successfully</msg>
S:  </result>
S:  <resData>
S:   <domain:chkData
S:     xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
S:    <domain:cd>
S:     <domain:name avail="0">allocation.example</domain:name>
S:     <domain:reason>Allocation Token mismatch</domain:reason>
S:    </domain:cd>
S:    <domain:cd>
S:     <domain:name avail="1">allocation2.example</domain:name>
S:    </domain:cd>
S:   </domain:chkData>
S:  </resData>
S:  <trID>
S:   <clTRID>ABC-DEF-12345</clTRID>
S:   <svTRID>54321-XYZ</svTRID>
S:  </trID>
S: </response>
S:</epp>]]></artwork>
          </figure>

       <t>This extension does not add any elements to the EPP &lt;check&gt; response
       described in the <xref target="RFC5730"/>.</t>

      </section>

      <!-- end CHECK command -->

      <section anchor="infoCommand" title="EPP &lt;info&gt; Command">

        <t>This extension defines additional elements to extend the EPP
        &lt;info&gt; command of an object mapping like <xref target="RFC5731"/>.</t>

       <t>The EPP &lt;info&gt; command allows a client to request information associated with an
       existing object.  Authorized clients MAY retrieve the <xref target="allocationToken">Allocation Token</xref> along
       with the other object information using the &lt;allocationToken:info&gt; element.  The &lt;allocationToken:info&gt;
       element is an empty element that serves as a marker to the server to
       return the &lt;allocationToken:allocationToken&gt; element in the info response.  If the client is not
       authorized to receive the Allocation Token, the server MUST
       return an EPP error result code of 2201.  If the client is authorized to
       receive the Allocation Token, but there is no Allocation Token
       associated with the object, the server MUST return an EPP error result code of
       2303.  The 
       auhorization is subject to server policy.</t>

       <figure>
            <preamble>Example &lt;info&gt; command with the allocationToken:info
            extension for the allocation.example domain name:</preamble>

            <artwork><![CDATA[
C:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
C:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
C:  <command>
C:   <info>
C:    <domain:info
C:      xmlns:domain="urn:ietf:params:xml:ns:domain-1.0"
C:      xsi:schemaLocation="urn:ietf:params:xml:ns:domain-1.0
C:      domain-1.0.xsd">
C:      <domain:name>allocation.example</domain:name>
C:    </domain:info>
C:   </info>
C:   <extension>
C:      <allocationToken:info
C:        xmlns:allocationToken=
C:          "urn:ietf:params:xml:ns:allocationToken-1.0/>
C:   </extension>
C:   <clTRID>ABC-12345</clTRID>
C:  </command>
C:</epp>]]></artwork>
       </figure>

          <t>If the query was successful, the server replies with an
          &lt;allocationToken:allocationToken&gt; element, as described in
          <xref target="allocationToken"/>.</t>

          <figure>
            <preamble>Example &lt;info&gt; domain response using the
            &lt;allocationToken:allocationToken&gt; extension:</preamble>

            <artwork><![CDATA[
S:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
S:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
S:  <response>
S:    <result code="1000">
S:      <msg>Command completed successfully</msg>
S:    </result>
S:    <resData>
S:      <domain:infData
S:       xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
S:        <domain:name>allocation.example</domain:name>
S:        <domain:roid>EXAMPLE1-REP</domain:roid>
S:        <domain:status s="pendingCreate"/>
S:        <domain:registrant>jd1234</domain:registrant>
S:        <domain:contact type="admin">sh8013</domain:contact>
S:        <domain:contact type="tech">sh8013</domain:contact>
S:        <domain:clID>ClientX</domain:clID>
S:        <domain:crID>ClientY</domain:crID>
S:        <domain:crDate>2012-04-03T22:00:00.0Z</domain:crDate>
S:        <domain:authInfo>
S:          <domain:pw>2fooBAR</domain:pw>
S:        </domain:authInfo>
S:      </domain:infData>
S:    </resData>
S:    <extension>
S:      <allocationToken:allocationToken
S:        xmlns:allocationToken=
S:          "urn:ietf:params:xml:ns:allocationToken-1.0">
S:        abc123
S:      </allocationToken:allocationToken>
S:    </extension>
S:    <trID>
S:      <clTRID>ABC-12345</clTRID>
S:      <svTRID>54321-XYZ</svTRID>
S:    </trID>
S:  </response>
S:</epp>]]></artwork>
          </figure>

      </section>
      <!-- end INFO command -->

      <section anchor="transferQueryCommand" title="EPP &lt;transfer&gt; Query Command">

       <t>This extension does not add any elements to the EPP &lt;transfer&gt; query command
       or &lt;transfer&gt; query response described in <xref target="RFC5730"/>.</t>

      </section>
      <!-- end TRANSFER QUERY command -->

      </section>

      <section anchor="transformCommands" title="EPP Transform Commands">

        <t>EPP provides five commands to transform objects: &lt;create&gt; to create an instance of an object,
        &lt;delete&gt; to delete an instance of an object, &lt;renew&gt; to extend the validity period of an object,
        &lt;transfer&gt; to manage object sponsorship changes, and &lt;update&gt; to change information associated
        with an object.</t>

      <section anchor="createCommand" title="EPP &lt;create&gt; Command">

       <t>This extension defines additional elements to extend the EPP
        &lt;create&gt; command of an object mapping like <xref target="RFC5731"/>.</t>

       <t>The EPP &lt;create&gt; command provides a transform operation that allows a client to create an instance of an object.
       In addition to the EPP command elements described in an object mapping like <xref target="RFC5731"/>, the command MUST contain a
       child &lt;allocationToken:allocationToken&gt; element for the client to be authorized to create and allocate the object.  
       If the Allocation Token does not apply to the object, the server MUST return an EPP error result code of 2201.</t>

       <figure>
            <preamble>Example &lt;create&gt; command to create a domain object with an Allocation Token:</preamble>

            <artwork><![CDATA[
C:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
C:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
C:  <command>
C:    <create>
C:      <domain:create
C:       xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
C:        <domain:name>allocation.example</domain:name>
C:        <domain:registrant>jd1234</domain:registrant>
C:        <domain:contact type="admin">sh8013</domain:contact>
C:        <domain:contact type="tech">sh8013</domain:contact>
C:        <domain:authInfo>
C:          <domain:pw>2fooBAR</domain:pw>
C:        </domain:authInfo>
C:      </domain:create>
C:    </create>
C:    <extension>
C:      <allocationToken:allocationToken
C:        xmlns:allocationToken=
C:          "urn:ietf:params:xml:ns:allocationToken-1.0">
C:        abc123
C:      </allocationToken:allocationToken>
C:    </extension>
C:    <clTRID>ABC-12345</clTRID>
C:  </command>
C:</epp>]]></artwork>
       </figure>

       <t>This extension does not add any elements to the EPP &lt;create&gt; response described
       in the <xref target="RFC5730"/>.</t>

      </section>
      <!-- end CREATE command -->

      <section anchor="deleteCommand" title="EPP &lt;delete&gt; Command">

       <t>This extension does not add any elements to the EPP &lt;delete&gt; command
       or &lt;delete&gt; response described in the <xref target="RFC5730"/>.</t>

      </section>
      <!-- end DELETE command -->

      <section anchor="renewCommand" title="EPP &lt;renew&gt; Command">

       <t>This extension does not add any elements to the EPP &lt;renew&gt; command
       or &lt;renew&gt; response described in the <xref target="RFC5730"/>.</t>

      </section>
      <!-- end RENEW command -->

      <section anchor="transferCommand" title="EPP &lt;transfer&gt; Command">

       <t>This extension defines additional elements to extend the EPP
        &lt;transfer&gt; request command of an object mapping like <xref target="RFC5731"/>.</t>

       <t>The EPP &lt;transfer&gt; request command provides a transform operation that allows a client to request the
       transfer of an object.
       In addition to the EPP command elements described in an object mapping like <xref target="RFC5731"/>, the command MUST contain a
       child &lt;allocationToken:allocationToken&gt; element for the client to be authorized to 
       transfer and allocate the object.  The authorization associated with the Allocation Token is in addition to and 
       does not replace the authorization mechanism defined for the object's &lt;transfer&gt; request command.    
       If the Allocation Token is invalid or not required for the object, 
       the server MUST return an EPP error result code of 2201.</t>
       <t>
       </t>

       <figure>
            <preamble>Example &lt;transfer&gt; request command to allocate the domain object with
            the Allocation Token:</preamble>

            <artwork><![CDATA[
C:<?xml version="1.0" encoding="UTF-8" standalone="no"?>
C:<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
C:  <command>
C:    <transfer op="request">
C:      <domain:transfer
C:        xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
C:        <domain:name>example1.tld</domain:name>
C:        <domain:period unit="y">1</domain:period>
C:        <domain:authInfo>
C:          <domain:pw>2fooBAR</domain:pw>
C:        </domain:authInfo>
C:      </domain:transfer>
C:    </transfer>
C:    <extension>
C:      <allocationToken:allocationToken
C:        xmlns:allocationToken=
C:          "urn:ietf:params:xml:ns:allocationToken-1.0">
C:        abc123
C:      </allocationToken:allocationToken>
C:    </extension>
C:    <clTRID>ABC-12345</clTRID>
C:  </command>
C:</epp>]]></artwork>
       </figure>

       <t>This extension does not add any elements to the EPP &lt;transfer&gt; response described
       in the <xref target="RFC5730"/>.</t>

      </section>
      <!-- end TRANSFER command -->

      <section anchor="updateCommand" title="EPP &lt;update&gt; Command">

       <t>This extension does not add any elements to the EPP &lt;update&gt; command
       or &lt;update&gt; response described in the <xref target="RFC5730"/>.</t>

      </section>
      <!-- end UPDATE command -->

    </section>

    </section>

    <!-- EPP command mapping -->

    <section anchor="syntax" title="Formal Syntax">

      <t>One schema is presented here that is the EPP Allocation Token Extension
      schema.</t>

      <t>The formal
      syntax presented here is a complete schema representation of the object
      mapping suitable for automated validation of EPP XML instances. The
      BEGIN and END tags are not part of the schema; they are used to note the
      beginning and ending of the schema for URI registration purposes.</t>

    <section title="Allocation Token Extension Schema">

      <figure>
        <artwork><![CDATA[
BEGIN
<?xml version="1.0" encoding="UTF-8"?>
<schema
  targetNamespace="urn:ietf:params:xml:ns:allocationToken-1.0"
  xmlns:allocationToken="urn:ietf:params:xml:ns:allocationToken-1.0"
  xmlns="http://www.w3.org/2001/XMLSchema"
  elementFormDefault="qualified"
>

  <annotation>
    <documentation>
      Extensible Provisioning Protocol v1.0
      Allocation
      Token Extension.
    </documentation>
  </annotation>

  <!-- Element used in info command to get allocation token. -->
  <element name="info"/>

  <!-- Allocation Token used in transform
    commands and info response -->
  <element
    name="allocationToken"
    type="allocationToken:allocationTokenType"/>

  <simpleType name="allocationTokenType">
    <restriction base="token">
      <minLength value="1"/>
    </restriction>
  </simpleType>

<!-- End of schema. -->
</schema>
END]]></artwork>
      </figure>
      </section>
    </section>

    <section anchor="IANA" title="IANA Considerations">

    	<section anchor="IANA-XML-Namespace" title="XML Namespace">
         <t>
             This document uses URNs to describe XML namespaces and XML schemas
             conforming to a registry mechanism described in <xref target="RFC3688"/>.
         </t>

         <t>Registration request for the allocationToken namespace:</t>
         
         <t><list>
         <t>URI: ietf:params:xml:ns:allocationToken-1.0</t>
         
         <t>Registrant Contact: IESG</t>
          
         <t>XML: None. Namespace URIs do not represent an XML specification.</t>
         </list></t>
         
         <t>Registration request for the allocationToken XML schema:</t>
         
         <t><list>
         <t>URI: ietf:params:xml:schema:allocationToken-1.0</t>
         
         <t>Registrant Contact: IESG</t>
          
         <t>XML: See the "Formal Syntax" section of this document.</t>
         
         </list></t>
 
       </section>

       <section anchor="EPP-Extension-Registry" title="EPP Extension Registry">

       	<t>
   The following registration of the EPP Extension Registry, described in <xref target="RFC7451"/>, is requested:</t>

   <t>
   Name of Extension: &quot;Allocation Token Extension for the Extensible Provisioning Protocol (EPP)&quot;
   </t>

   <t>
   Document status: Standards Track
   </t>

   <t>
   Reference: (insert reference to RFC version of this document)
   </t>

   <t>
   Registrant Name and Email Address: IESG, &lt;iesg@ietf.org&gt;
   </t>

   <t>
   TLDs: Any
   </t>

   <t>
   IPR Disclosure: None
   </t>

   <t>
   Status: Active
   </t>

   <t>
   Notes: None
   </t>

       </section>

    </section>

    <section anchor="Implementation" title="Implementation Status">
      <t>Note to RFC Editor: Please remove this section and the reference to
         <xref target="RFC7942">RFC 7942</xref> before publication.</t>
      <t>This section records the status of known implementations of the
      protocol defined by this specification at the time of posting of
      this Internet-Draft, and is based on a proposal described in <xref target="RFC7942">RFC
      7942</xref>.  The description of implementations in this section is
      intended to assist the IETF in its decision processes in
      progressing drafts to RFCs.  Please note that the listing of any
      individual implementation here does not imply endorsement by the
      IETF.  Furthermore, no effort has been spent to verify the
      information presented here that was supplied by IETF contributors.
      This is not intended as, and must not be construed to be, a
      catalog of available implementations or their features.  Readers
      are advised to note that other implementations may exist.</t>
      <t>According to <xref target="RFC7942">RFC 7942</xref>, "this will allow reviewers and working
      groups to assign due consideration to documents that have the
      benefit of running code, which may serve as evidence of valuable
      experimentation and feedback that have made the implemented
      protocols more mature.  It is up to the individual working groups
      to use this information as they see fit".</t>
      <section title="Verisign EPP SDK">
        <t>Organization: Verisign Inc.</t>
        <t>Name: Verisign EPP SDK</t>
        <t>Description: The Verisign EPP SDK includes both a full client implementation
        and a full server stub implementation of draft-ietf-regext-allocation-token.</t>
        <t>Level of maturity: Production</t>
        <t>Coverage: All aspects of the protocol are implemented.</t>
        <t>Licensing: GNU Lesser General Public License</t>
        <t>Contact: jgould@verisign.com</t>
        <t>URL: https://www.verisign.com/en_US/channel-resources/domain-registry-products/epp-sdks</t>
      </section>
      <section title="Neustar EPP SDK">
        <t>Organisation: Neustar Inc.</t>
        <t>Name: Neustar EPP SDK</t>
        <t>Description: The Neustar EPP SDK includes a full client implementation
        of draft-ietf-regext-allocation-token.</t>
        <t>Level of maturity: Production</t>
        <t>Coverage: All aspects of the protocol are implemented.</t>
        <t>Licensing: GNU Lesser General Public License</t>
        <t>Contact: quoc-anh.np@team.neustar</t>
        <t>URL: http://registrytoolkit.neustar</t>
      </section>
      <section title="Neustar gTLD SRS">
        <t>Organisation: Neustar Inc.</t>
        <t>Name: Neustar generic Top Level Domain (gTLD) Shared Registry System (SRS).</t>
        <t>Description: The Neustar gTLD SRS implements the server side of
          draft-ietf-regext-allocation-token for several Top Level Domains.</t>
        <t>Level of maturity: Production</t>
        <t>Coverage: All server side aspects of the protocol are implemented.</t>
        <t>Licensing: Proprietary</t>
        <t>Contact: quoc-anh.np@team.neustar</t>
      </section>
      <section title="Net::DRI">
        <t>Organization: Dot and Co</t>
        <t>Name: Net::DRI</t>
        <t>Description: Net::DRI implements the client-side of draft-ietf-regext-allocation-token.</t>
        <t>Level of maturity: Production</t>
        <t>Coverage: All client-side aspects of the protocol are implemented.</t>
        <t>Licensing: GNU Lesser General Public License</t>
        <t>Contact: netdri@dotandco.com</t>
      </section>
      
    </section>


    <section anchor="Security" title="Security Considerations">
      <t>The mapping described in this document does not provide any
      security services beyond those described by <xref
      target="RFC5730">EPP</xref> and protocol layers used by EPP. The security
      considerations described in these other specifications apply to this
      specification as well.</t>  
      <t>The mapping acts as a conduit for the passing of Allocation Tokens 
      between a client and a server.  The definition of the Allocation Token 
      is defined outside of this mapping.  The following are security considerations 
      in the definition and use of an Allocation Token:</t>
      <t><list style="numbers">
        <t>An Allocation Token should be considered secret information by the client and should be protected at rest and in transit.</t>
        <t>An Allocation Token should be single use, meaning it should be unique per object and per allocation operation.</t>
        <t>An Allocation Token should have a limited life with some form of expiry in the Allocation Token if generated by a trusted 3rd third party,  
        or with a server-side expiry if generated by the server.</t>
        <t>An Allocation Token should use a strong random value if it is based on an unsigned code.</t>
        <t>An Allocation Token should leverage digital signatures to confirm its authenticity if generated by a trusted 3rd party.</t>
        <t>An Allocation Token that is signed XML should be encoded (e.g., <xref target="RFC4648">base64</xref>) to mitigate server validation issues.</t>
      </list></t>
    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">

      <t>The authors wish to acknowledge the original concept for this draft and the
      efforts in the initial versions of this draft by Trung Tran and Sharon Wodjenski.</t>

      <t>Special suggestions that have been incorporated into this document
      were provided by Scott Hollenbeck, Rubens Kuhl, Alexander Mayrhofer, Patrick Mevzek, and Adam Roach.</t>

    </section>

  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references title="Normative References">

      &RFC2119;

      &RFC3688;

      &RFC5730;

      &RFC5731;

      &RFC7942;

    </references>

    <references title="Informative References">  
    
      &RFC4648; 
       
      &RFC7451; 
      
      &RFC8174; 
      
    </references>
      

   <section title="Change History">
    <section title="Change from 00 to 01 " anchor="version-00-to-01">
      <t><list style="numbers">
        <t>Amended XML Namespace section of IANA Considerations, added EPP Extension Registry section.</t>
        <t>Moved Change History to the back section as an Appendix.</t>
      </list></t>
    </section>
    <section title="Change from 01 to 02 " anchor="version-01-to-02">
      <t><list style="numbers">
        <t>Ping update.</t>
      </list></t>
    </section>
    <section title="Change from 02 to 03 " anchor="version-02-to-03">
      <t><list style="numbers">
        <t>Ping update.</t>
      </list></t>
    </section>
    <section title="Change from 03 to 04" anchor="change-03-to-04">
      <t><list style="numbers">
        <t>Updated the authors for the draft.</t>
      </list></t>
    </section>
    <section title="Change from 04 to REGEXT 00" anchor="change-04-to-WG00">
      <t><list style="numbers">
        <t>Changed to regext working group draft by changing draft-gould-allocation-token to
        draft-ietf-regext-allocation-token.</t>
      </list></t>
    </section>
    <section title="Change from REGEXT 00 to REGEXT 01" anchor="version-WG00-to-WG01">
      <t><list style="numbers">
        <t>Ping update.</t>
      </list></t>
    </section>
    <section title="Change from REGEXT 01 to REGEXT 02" anchor="version-WG01-to-WG02">
      <t><list style="numbers">
        <t>Added the Implementation Status section.</t>
      </list></t>
    </section>
    <section title="Change from REGEXT 02 to REGEXT 03" anchor="version-WG02-to-WG03">
      <t><list style="numbers">
        <t>Changed Neustar author to Kal Feher.</t>
      </list></t>
    </section>
    <section title="Change from REGEXT 03 to REGEXT 04" anchor="version-WG03-to-WG04">
      <t><list style="numbers">
        <t>Added Neustar implementation to the Implementation Status section.</t>
      </list></t>
    </section>
    <section title="Change from REGEXT 04 to REGEXT 05" anchor="version-WG04to-WG05">
      <t><list style="numbers">
        <t>Updates based on feedback from Patrick Mevzek, that include:
          <list style="numbers">
            <t>Remove "or code" from the Abstract section.</t>
            <t>Add a missing "to" in "an allocation token TO one of the EPP..." in the Introduction section.</t>
            <t>Reword the "The allocation token is known to the server..." sentence in the Introduction section.</t>
            <t>Modify the "The allocation token MAY be returned to an authorized client for passing out-of-band to a client that uses it with an EPP transform command"
            to clarify who the two separate clients are.</t>
            <t>Removed an unneeded ":" from the EPP &lt;transfer&gt; Command and EPP &lt;update&gt; Command sections.</t>
          </list>
        </t>
      </list></t>
    </section>
    <section title="Change from REGEXT 05 to REGEXT 06" anchor="version-WG05to-WG06">
      <t><list style="numbers">
        <t>Fix description of Neustar gTLD SRS based on feedback from Rubens Kuhl.</t>
        <t>Updates based on feedback from Alexander Mayrhofer, that include:
          <list style="numbers">
            <t>Making all references to Allocation Token to use the upper case form.</t>
            <t>Revise the language of the abstract to include "for including an Allocation 
               Token in query and transform commands.  The Allocation Token is used as a 
               credential that authorizes a client to request the allocation of a specific 
               object from the server, using one of the EPP transform commands..."</t>
            <t>Replace the title "EPP &lt;transfer&gt; Command" with 
               "EPP &lt;transfer&gt; Query Command" for section 3.1.3.</t>
            <t>Revise the second sentence of the Introduction to "The mapping, ..., supports passing an Allocation Token..."</t>
            <t>Change "support" to "require" in the Introduction sentence "It is up to server policy which EPP transform commands 
               and which objects support the Allocation Token."</t>
            <t>Add the definition of Allocation to the Introduction.</t>
            <t>Removed "transform" from "all of the supported EPP transform commands" in the "Allocation Token" section, 
            since the Allocation Token can be used with the "check" command as well.</t>
            <t>Remove the word "same" from "The same &lt;allocationToken:allocationToken&gt; element is used for all..." in 
            the "Allocation Token" section.</t>
            <t>Change the description of the use of the 2201 error in the "Allocation Token" section, 
            the "EPP &lt;create&gt; Command" section, the "EPP &lt;transfer&gt; Command" section, and the "EPP &lt;update&gt; Command" section.</t>
            <t>Revise "&lt;check&gt; to determine if an object is known to the server..." to "&lt;check&gt; to determine if an object can be provisioned..." and 
            remove "detailed" in the description of the &lt;info&gt; in the "EPP Query Commands" section.</t>
            <t>Add missing description of the expected &lt;check&gt; response behavior.</t>
            <t>Replaced the example reason "Invalid domain-token pair" with "Allocation Token mismatch".</t>
            <t>Replace "information on" with "information associated with" in the "EPP &lt;info&gt; Command" section.</t>
            <t>Removed the "that identifies the extension namespace", the ", defined in...", the Allocation Token links 
            from the error response sentences, and the "object referencing the &lt;allocationToken:info&gt; element" in the "EPP &lt;info&gt; Command" section.</t>
            <t>Added "The authorization is subject to server policy."  to the "EPP &lt;info&gt; Command" section.</t>
            <t>Replace "or &lt;transfer&gt; response&gt;"  with "or &lt;transfer&gt; query response&gt;" in the EPP &lt;transfer&gt; Query Command" section.</t> 
            <t>Replace "create an object" with "create an instance of an object" in the "EPP &lt;create&gt; Command" section.</t>
            <t>Revised the sentence to include "the command MUST contain a child &lt;allocationToken:allocationToken&gt; 
            element for the client to be authorized to create and allocate the object" in the "EPP &lt;create&gt; Command" section.</t>
            <t>Removed the reference to section 2.1 and the namespace identification text in the "EPP &lt;transfer&gt; Command" section.</t> 
            <t>Added "The authorization associated with the Allocation Token is in addition to and 
            does not replace the authorization mechanism defined for the object's &lt;transfer&gt; request command." to the "EPP &lt;transfer&gt; Command" section.</t>
            <t>Modified the first sentence of the "EPP Extension Registry" section to read "The following registration of the EPP Extension Registry, described in RFC7451, is requested"</t>
            <t>Removed support with using the Allocation Token with an empty extension of update (e.g., release command), based on the confusion and lack of known applicability.</t>
        </list></t>
        <t>Updates based on feedback from Scott Hollenbeck, that include:
          <list style="numbers">
            <t>Revised XML schema to included a minimum length of 1 for the allocationTokenType.</t>
            <t>Revised the "IANA Considerations" section to include the registration of the XML schema.</t>
            <t>Revised the "Security Considerations" section to include considerations for the definition of the Allocation Tokens.</t>
          </list>
        </t>
      </list></t>
    </section>
    <section title="Change from REGEXT 06 to REGEXT 07" anchor="version-WG06to-WG07">
      <t><list style="numbers">
        <t>Updates based on feedback from Patrick Mevzek:
          <list style="numbers">
            <t>Updated obsoleted RFC 7942 to RFC 7942.</t>
            <t>Moved RFC 7451 to an informational reference.</t>
          </list>
        </t>
      </list></t>    
     </section>
    <section title="Change from REGEXT 07 to REGEXT 08" anchor="version-WG07to-WG08">
      <t><list style="numbers">
        <t>Changed Kal Feher's contact e-mail address.</t>
        <t>Changed Neustar's Implementation Status contact e-mail address.</t> 
        <t>Added the Net::DRI sub-section to the Implementation Status section.</t>
      </list></t>    
     </section>
    <section title="Change from REGEXT 08 to REGEXT 09" anchor="version-WG08to-WG09">
      <t><list style="numbers">
        <t>Updates based on the AD review by Adam Roach, that include:
          <list style="numbers">
            <t>In "Abstract", set "query" and "transform" off in some way (e.g., using quotation
marks)</t>
            <t>In "Conventions Used in This Document", please update to use the boilerplate from RFC 8174.</t>
            <t>Remove "allocationToken-1.0" is used as an abbreviation for "urn:ietf:params:xml:ns:allocationToken-1.0".</t>
            <t>In "Allocation Token", change "The server MUST have the Allocation Token" to "The server MAY have the Allocation Token".</t>
            <t>In "EPP &lt;check&gt; Command", change "This extension allow clients" to "This extension allows clients".</t>
            <t>Use domains reserved by RFC 2026 for the examples.  The example domain "example.tld" was changed to "allocation.example" and the example domain "example2.tld" was changed to "allocation2.example".</t>
            <t>In "EPP &lt;info&gt; Command", change "...the server MUST return an EPP error result code of 2303 object referencing the &lt;allocationToken:info&gt; element." to "...the server MUST return an EPP error result code of 2303."</t>
   			<t>In "EPP &lt;transfer&gt; Query Command", remove "the" before "[RFC5730]".</t>
   			<t>In "EPP &lt;transfer&gt; Command", change "If the Allocation Token does not apply to the object..." to "If the Allocation Token is invalid or not required for the object...".</t>
   			<t>In "XML Namespace", remove the sentence "The following URI assignment is requested of IANA:"</t>
   			<t>In "Security Considerations", change "An Allocation Token should is" to "An Allocation Token that is".  Also informatively cite RFC 4648 for the base64 reference.</t>
        </list></t>
        <t>Change "ietf:params:xml:ns:allocationToken-1.0" to "ietf:params:xml:schema:allocationToken-1.0" for the XML schema IANA registration.</t>
      </list></t>    
     </section>
   </section>

  </back>

  <!-- vim: set ts=2 sw=2 expandtab: -->
</rfc>
